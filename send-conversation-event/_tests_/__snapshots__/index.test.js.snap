// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`send-conversation-event Everthing is successful Walkthrough passes in the correct arguments to SmoochCore 1`] = `
Array [
  Array [
    Object {
      "keyId": "id",
      "scope": "app",
      "secret": "secret",
      "serviceUrl": "mock-smooch-api-url",
    },
  ],
]
`;

exports[`send-conversation-event Everthing is successful Walkthrough passes in the correct arguments to axios to get the interaction metadata 1`] = `
Array [
  Array [
    Object {
      "auth": Object {
        "password": "paasword",
        "username": "username",
      },
      "method": "get",
      "url": "https://us-east-1-dev-edge.domain/v1/tenants/66d83870-30df-4a3b-8801-59edff162034/interactions/66d83870-30df-4a3b-8801-59edff162040/metadata",
    },
  ],
]
`;

exports[`send-conversation-event Everthing is successful Walkthrough passes in the correct arguments to secretClient.getSecretValue() to get cx credentials 1`] = `
Array [
  Object {
    "SecretId": "us-east-1-dev-smooch-cx",
  },
]
`;

exports[`send-conversation-event Everthing is successful Walkthrough passes in the correct arguments to secretClient.getSecretValue() to get digital channels credentials 1`] = `
Array [
  Object {
    "SecretId": "us-east-1-dev-smooch-app",
  },
]
`;

exports[`send-conversation-event Everthing is successful Walkthrough passes in the correct arguments to smooch.appUsers.conversationActivity() 1`] = `
Array [
  Array [
    Object {
      "activityProps": Object {
        "role": "appMaker",
        "type": "conversation:read",
      },
      "appId": "5e31c81640a22c000f5d7f28",
      "userId": "5e31c81640a22c000f5d7f70",
    },
  ],
]
`;

exports[`send-conversation-event Everthing is successful sends back status 200 when the code runs without any error 1`] = `
Object {
  "body": Object {
    "event": "conversation-read",
    "resourceId": "667802d8-2260-436c-958a-2ee0f71f73f0",
  },
  "status": 200,
}
`;

exports[`send-conversation-event sends back status 400 when the provided event is not supported 1`] = `
Object {
  "body": Object {
    "message": "the provided event is not supported",
  },
  "status": 400,
}
`;

exports[`send-conversation-event sends back status 500 when there is a error retrieving interaction metadata 1`] = `
Object {
  "body": Object {
    "message": "An error occurred retrieving the interaction metadata",
  },
  "status": 500,
}
`;

exports[`send-conversation-event sends back status 500 when there is a error validating digital channels credentials 1`] = `
Object {
  "body": Object {
    "message": "An Error has occurred trying to validate digital channels credentials",
  },
  "status": 500,
}
`;

exports[`send-conversation-event sends back status 500 when there is an error retrieving cx credentials 1`] = `
Object {
  "body": Object {
    "message": "An Error has occurred trying to retrieve cx credentials",
  },
  "status": 500,
}
`;

exports[`send-conversation-event sends back status 500 when there is an error retrieving digital channels credentials 1`] = `
Object {
  "body": Object {
    "message": "An Error has occurred trying to retrieve digital channels credentials",
  },
  "status": 500,
}
`;

exports[`send-conversation-event sends back status 500 when there is an error sending conversation activity 1`] = `
Object {
  "body": Object {
    "message": "An error occurred trying to send conversation activity",
  },
  "status": 500,
}
`;
