// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`smooch-webhook getClientInactivityTimeout calls docClient.get() correctly 1`] = `
  Array [
    Array [
      Object {
        "Key": Object {
          "id": "mock-integration-id",
          "tenant-id": "mock-tenant-id",
        },
        "TableName": "us-east-1-dev-smooch",
      },
    ],
  ]
`;

exports[`smooch-webhook handleCustomerMessage !hasInteractionItem calls uploadArtifactFile correctly 1`] = `
  Array [
    Array [
      Object {
        "interactionId": "new-interaction-id",
        "tenantId": "mock-tenant-id",
      },
      "mock-artifact-id",
      Object {
        "_id": "mock_id",
        "mediaUrl": "http://mockurl",
        "received": "10",
      },
      "auth",
    ],
  ]
`;

exports[`smooch-webhook handleCustomerMessage !hasInteractionItem customerIdentifier !== "Customer" 1`] = `"handleCustomerMessage Successful"`;

exports[`smooch-webhook handleCustomerMessage hasInteractionId and interactionID calls sendCustomerMessageToParticipants correctly 1`] = `
  Array [
    Array [
      Object {
        "appId": "mock-app-id",
        "auth": "auth",
        "contentType": "text",
        "interactionId": "mock-interaction-id",
        "logContext": "logContext",
        "message": Object {
          "received": "10",
          "text": "INTERACTION_NOT_FOUND_ERROR",
        },
        "tenantId": "mock-tenant-id",
        "userId": "mock-user-id",
      },
    ],
    Array [
      Object {
        "appId": "mock-app-id",
        "auth": "auth",
        "contentType": "type",
        "interactionId": "new-interaction-id",
        "logContext": "logContext",
        "message": Object {
          "_id": "mock_id",
          "mediaUrl": "http://mockurl",
          "received": "10",
        },
        "metadataSource": undefined,
        "tenantId": "mock-tenant-id",
        "userId": "mock-user-id",
      },
    ],
  ]
`;

exports[`smooch-webhook sendConversationEvent latestMessageSentBy !== 'customer' calls checkIfClientIsDisconnected correctly 1`] = `
  Array [
    Array [
      Object {
        "disconnectTimeoutInMinutes": true,
        "latestAgentMessageTimestamp": "00:00:00",
        "logContext": Object {
          "smoochUserId": "mock-smooch-user-id",
        },
        "userId": "mock-smooch-user-id",
      },
    ],
  ]
`;

exports[`smooch-webhook sendConversationEvent latestMessageSentBy !== 'customer' calls getClientInactivityTimeout correctly 1`] = `
  Array [
    Array [
      Object {
        "logContext": Object {
          "smoochUserId": "mock-smooch-user-id",
        },
      },
    ],
  ]
`;

exports[`smooch-webhook sendConversationEvent latestMessageSentBy !== 'customer' calls shouldCheckIfClientIsDisconnected correctly 1`] = `
  Array [
    Array [
      Object {
        "logContext": Object {
          "smoochUserId": "mock-smooch-user-id",
        },
        "userId": "mock-smooch-user-id",
      },
    ],
  ]
`;

exports[`smooch-webhook shouldCheckIfClientIsDisconnected calls docClient.get() correctly 1`] = `
  Array [
    Array [
      Object {
        "Key": Object {
          "SmoochUserId": "mock-user-id",
        },
        "TableName": "us-east-1-dev-smooch-interactions",
      },
    ],
  ]
`;
