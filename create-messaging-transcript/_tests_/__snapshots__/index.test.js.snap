// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`create-messaging-transcript Everything is successful Walkthrough passes in the correct arguments to SmoochCore 1`] = `
Array [
  Array [
    Object {
      "keyId": "id",
      "scope": "app",
      "secret": "secret",
      "serviceUrl": "mock-smooch-api-url",
    },
  ],
]
`;

exports[`create-messaging-transcript Everything is successful Walkthrough passes in the correct arguments to axios 1`] = `
Array [
  Array [
    Object {
      "auth": Object {
        "password": "password",
        "username": "username",
      },
      "method": "get",
      "url": "https://us-east-1-dev-edge.domain/v1/tenants/250faddb-9723-403a-9bd5-3ca710cb26e5/interactions/667802d8-2260-436c-958a-2ee0f71f73f0/metadata",
    },
  ],
  Array [
    Object {
      "auth": Object {
        "password": "password",
        "username": "username",
      },
      "data": Object {
        "append": [MockFunction] {
          "calls": Array [
            Array [
              "content",
              Object {
                "data": Array [
                  91,
                  93,
                ],
                "type": "Buffer",
              },
              Object {
                "contentType": "application/json",
                "filename": "transcript.json",
              },
            ],
            Array [
              "content.metadata",
              "{\\"transcript\\":true}",
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        },
        "getHeaders": [MockFunction] {
          "calls": Array [
            Array [],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": "mock from headers",
            },
          ],
        },
      },
      "headers": "mock from headers",
      "method": "post",
      "url": "https://us-east-1-dev-edge.domain/v1/tenants/250faddb-9723-403a-9bd5-3ca710cb26e5/interactions/667802d8-2260-436c-958a-2ee0f71f73f0/artifacts/667802d8-2260-436c-958a-2ee0f71f73f1",
    },
  ],
]
`;

exports[`create-messaging-transcript Everything is successful Walkthrough passes in the correct arguments to axios to get interaction metadata 1`] = `
Array [
  Object {
    "auth": Object {
      "password": "password",
      "username": "username",
    },
    "method": "get",
    "url": "https://us-east-1-dev-edge.domain/v1/tenants/250faddb-9723-403a-9bd5-3ca710cb26e5/interactions/667802d8-2260-436c-958a-2ee0f71f73f0/metadata",
  },
]
`;

exports[`create-messaging-transcript Everything is successful Walkthrough passes in the correct arguments to axios to push file to artifact 1`] = `
Array [
  Object {
    "auth": Object {
      "password": "password",
      "username": "username",
    },
    "headers": "mock from headers",
    "method": "post",
    "url": "https://us-east-1-dev-edge.domain/v1/tenants/250faddb-9723-403a-9bd5-3ca710cb26e5/interactions/667802d8-2260-436c-958a-2ee0f71f73f0/artifacts/667802d8-2260-436c-958a-2ee0f71f73f1",
  },
]
`;

exports[`create-messaging-transcript Everything is successful Walkthrough passes in the correct arguments to secretClient.getSecretValue() to get cx credentials 1`] = `
Array [
  Object {
    "SecretId": "us-east-1-dev-smooch-cx",
  },
]
`;

exports[`create-messaging-transcript Everything is successful Walkthrough passes in the correct arguments to secretClient.getSecretValue() to get digital channels credentials 1`] = `
Array [
  Object {
    "SecretId": "us-east-1-dev-smooch-app",
  },
]
`;

exports[`create-messaging-transcript Everything is successful Walkthrough passes in the correct arguments to smooch.appUsers.getMessages() 1`] = `
Array [
  Array [
    Object {
      "appId": "5e31c81640a22c000f5d7f28",
      "userId": "667802d8-2260-436c-958a-2ee0f71f73f2",
    },
  ],
  Array [
    Object {
      "appId": "5e31c81640a22c000f5d7f28",
      "query": Object {
        "before": "100",
      },
      "userId": "667802d8-2260-436c-958a-2ee0f71f73f2",
    },
  ],
]
`;

exports[`create-messaging-transcript Everything is successful messages are filtered for metadata 1`] = `
Array [
  Object {
    "channelId": null,
    "payload": Object {
      "body": Object {
        "actions": Object {},
        "contentType": "formResponse",
        "file": Object {
          "mediaSize": undefined,
          "mediaType": undefined,
          "mediaUrl": undefined,
        },
        "id": "5e31c81640a22c000f5d7f28",
        "quotedMessage": Object {
          "content": Object {
            "file": Object {
              "mediaSize": undefined,
              "mediaType": undefined,
              "mediaUrl": undefined,
            },
            "id": undefined,
            "text": undefined,
            "type": undefined,
          },
        },
        "text": "collect-message response",
      },
      "from": undefined,
      "metadata": Object {
        "name": "mock-customer",
        "source": "smooch",
        "type": "customer",
      },
      "tenant-id": "250faddb-9723-403a-9bd5-3ca710cb26e5",
      "timestamp": "1970-01-01T00:00:50Z",
      "to": null,
      "type": "message",
    },
    "timestamp": "50000",
  },
]
`;

exports[`create-messaging-transcript Everything is successful messages are filtered for previous timestamp 1`] = `
Array [
  Object {
    "channelId": null,
    "payload": Object {
      "body": Object {
        "actions": Object {},
        "contentType": "formResponse",
        "file": Object {
          "mediaSize": undefined,
          "mediaType": undefined,
          "mediaUrl": undefined,
        },
        "id": "5e31c81640a22c000f5d7f28",
        "quotedMessage": Object {
          "content": Object {
            "file": Object {
              "mediaSize": undefined,
              "mediaType": undefined,
              "mediaUrl": undefined,
            },
            "id": undefined,
            "text": undefined,
            "type": undefined,
          },
        },
        "text": "collect-message response",
      },
      "from": undefined,
      "metadata": Object {
        "name": "mock-customer",
        "source": "smooch",
        "type": "customer",
      },
      "tenant-id": "250faddb-9723-403a-9bd5-3ca710cb26e5",
      "timestamp": "1970-01-01T00:00:50Z",
      "to": null,
      "type": "message",
    },
    "timestamp": "50000",
  },
]
`;

exports[`create-messaging-transcript Everything is successful messages are filtered for role 'appUser' and type '' 1`] = `
Array [
  Object {
    "channelId": null,
    "payload": Object {
      "body": Object {
        "actions": Object {},
        "contentType": "formResponse",
        "file": Object {
          "mediaSize": undefined,
          "mediaType": undefined,
          "mediaUrl": undefined,
        },
        "id": "5e31c81640a22c000f5d7f28",
        "quotedMessage": Object {
          "content": Object {
            "file": Object {
              "mediaSize": undefined,
              "mediaType": undefined,
              "mediaUrl": undefined,
            },
            "id": undefined,
            "text": undefined,
            "type": undefined,
          },
        },
        "text": "collect-message response",
      },
      "from": undefined,
      "metadata": Object {
        "name": "mock-customer",
        "source": "smooch",
        "type": "customer",
      },
      "tenant-id": "250faddb-9723-403a-9bd5-3ca710cb26e5",
      "timestamp": "1970-01-01T00:00:50Z",
      "to": null,
      "type": "message",
    },
    "timestamp": "50000",
  },
]
`;

exports[`create-messaging-transcript Everything is successful messages are filtered for type 'formResponse' and quotedMessage 1`] = `
Array [
  Object {
    "channelId": null,
    "payload": Object {
      "body": Object {
        "actions": Object {},
        "contentType": "formResponse",
        "file": Object {
          "mediaSize": undefined,
          "mediaType": undefined,
          "mediaUrl": undefined,
        },
        "id": "5e31c81640a22c000f5d7f28",
        "quotedMessage": Object {
          "content": Object {
            "file": Object {
              "mediaSize": undefined,
              "mediaType": undefined,
              "mediaUrl": undefined,
            },
            "id": undefined,
            "text": undefined,
            "type": undefined,
          },
        },
        "text": "collect-message response",
      },
      "from": undefined,
      "metadata": Object {
        "name": "mock-customer",
        "source": "smooch",
        "type": "customer",
      },
      "tenant-id": "250faddb-9723-403a-9bd5-3ca710cb26e5",
      "timestamp": "1970-01-01T00:00:50Z",
      "to": null,
      "type": "message",
    },
    "timestamp": "50000",
  },
]
`;

exports[`create-messaging-transcript Everything is successful messages are mapped for role 'appMaker' and type 'form' 1`] = `
Array [
  Object {
    "channelId": null,
    "payload": Object {
      "body": Object {
        "actions": Object {},
        "contentType": "formResponse",
        "file": Object {
          "mediaSize": undefined,
          "mediaType": undefined,
          "mediaUrl": undefined,
        },
        "id": "5e31c81640a22c000f5d7f28",
        "quotedMessage": Object {
          "content": Object {
            "file": Object {
              "mediaSize": undefined,
              "mediaType": undefined,
              "mediaUrl": undefined,
            },
            "id": undefined,
            "text": undefined,
            "type": undefined,
          },
        },
        "text": "collect-message response",
      },
      "from": undefined,
      "metadata": Object {
        "name": "mock-customer",
        "source": "smooch",
        "type": "customer",
      },
      "tenant-id": "250faddb-9723-403a-9bd5-3ca710cb26e5",
      "timestamp": "1970-01-01T00:00:50Z",
      "to": null,
      "type": "message",
    },
    "timestamp": "50000",
  },
]
`;

exports[`create-messaging-transcript Everything is successful messages contains actions (shorthand message) 1`] = `
Array [
  Object {
    "channelId": null,
    "payload": Object {
      "body": Object {
        "actions": Array [
          Object {
            "_id": "mock-id-1",
            "text": "mock button name 1",
            "uri": "https://www.domain.com",
          },
          Object {
            "_id": "mock-id-2",
            "text": "mock button name 2",
            "uri": "https://www.domain.com",
          },
        ],
        "contentType": "text",
        "file": Object {
          "mediaSize": undefined,
          "mediaType": undefined,
          "mediaUrl": undefined,
        },
        "id": "5e31c81640a22c000f5d7f29",
        "quotedMessage": Object {},
        "text": undefined,
      },
      "from": undefined,
      "metadata": Object {
        "name": "system",
        "source": "smooch",
        "type": "TYPE",
      },
      "tenant-id": "250faddb-9723-403a-9bd5-3ca710cb26e5",
      "timestamp": "1970-01-01T00:00:50Z",
      "to": null,
      "type": "message",
    },
    "timestamp": "50000",
  },
]
`;

exports[`create-messaging-transcript Everything is successful messages for whatsapp interaction use phonenumber as display name 1`] = `
Array [
  Object {
    "channelId": null,
    "payload": Object {
      "body": Object {
        "actions": Object {},
        "contentType": "text",
        "file": Object {
          "mediaSize": undefined,
          "mediaType": undefined,
          "mediaUrl": undefined,
        },
        "id": "5e31c81640a22c000f5d7f29",
        "quotedMessage": Object {},
        "text": undefined,
      },
      "from": undefined,
      "metadata": Object {
        "name": "+50371675753",
        "source": "smooch",
        "type": "customer",
      },
      "tenant-id": "250faddb-9723-403a-9bd5-3ca710cb26e5",
      "timestamp": "1970-01-01T00:00:50Z",
      "to": null,
      "type": "message",
    },
    "timestamp": "50000",
  },
]
`;

exports[`create-messaging-transcript Everything is successful messages from agent uses "from" from metadata to display name 1`] = `
Array [
  Object {
    "channelId": null,
    "payload": Object {
      "body": Object {
        "actions": Object {},
        "contentType": "text",
        "file": Object {
          "mediaSize": undefined,
          "mediaType": undefined,
          "mediaUrl": undefined,
        },
        "id": "5e31c81640a22c000f5d7f29",
        "quotedMessage": Object {},
        "text": undefined,
      },
      "from": undefined,
      "metadata": Object {
        "name": "first-Name last-Name",
        "source": "smooch",
        "type": "TYPE",
      },
      "tenant-id": "250faddb-9723-403a-9bd5-3ca710cb26e5",
      "timestamp": "1970-01-01T00:00:50Z",
      "to": null,
      "type": "message",
    },
    "timestamp": "50000",
  },
]
`;

exports[`create-messaging-transcript Everything is successful messages from agent uses "name" from message object to display name 1`] = `
Array [
  Object {
    "channelId": null,
    "payload": Object {
      "body": Object {
        "actions": Object {},
        "contentType": "text",
        "file": Object {
          "mediaSize": undefined,
          "mediaType": undefined,
          "mediaUrl": undefined,
        },
        "id": "5e31c81640a22c000f5d7f29",
        "quotedMessage": Object {},
        "text": undefined,
      },
      "from": undefined,
      "metadata": Object {
        "name": "+50371675753 lastName",
        "source": "smooch",
        "type": "TYPE",
      },
      "tenant-id": "250faddb-9723-403a-9bd5-3ca710cb26e5",
      "timestamp": "1970-01-01T00:00:50Z",
      "to": null,
      "type": "message",
    },
    "timestamp": "50000",
  },
]
`;

exports[`create-messaging-transcript Everything is successful messages from system shows "system" as display name 1`] = `
Array [
  Object {
    "channelId": null,
    "payload": Object {
      "body": Object {
        "actions": Object {},
        "contentType": "text",
        "file": Object {
          "mediaSize": undefined,
          "mediaType": undefined,
          "mediaUrl": undefined,
        },
        "id": "5e31c81640a22c000f5d7f29",
        "quotedMessage": Object {},
        "text": undefined,
      },
      "from": undefined,
      "metadata": Object {
        "name": "system",
        "source": "smooch",
        "type": "TYPE",
      },
      "tenant-id": "250faddb-9723-403a-9bd5-3ca710cb26e5",
      "timestamp": "1970-01-01T00:00:50Z",
      "to": null,
      "type": "message",
    },
    "timestamp": "50000",
  },
]
`;

exports[`create-messaging-transcript throws an error when there is a error fetching previous interaction messages 1`] = `"Error fetching previous integration messages"`;

exports[`create-messaging-transcript throws an error when there is a problem fetching integration messages 1`] = `"Error fetching integration messages"`;

exports[`create-messaging-transcript throws an error when there is a problem retrieving cx credentials 1`] = `"Error retrieving cx credentials"`;

exports[`create-messaging-transcript throws an error when there is a problem retrieving digital channels credentials (thrown by SmoochCore) 1`] = `"Error retrieving digital channels credentials"`;

exports[`create-messaging-transcript throws an error when there is a problem retrieving digital channels credentials 1`] = `"Error retrieving digital channels credentials"`;

exports[`create-messaging-transcript throws an error when there is an error persisting artifact history 1`] = `"Error persisting artifact history"`;
